/*
 * -------------------------------------------------
 *  Nextflow config file for running at CRG
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/chipseq -profile test
 */

// default params
params{

  // main input files
  id = "SRP012682"
  data = "/users/cn/sjin/projects/proportionality/data/${params.id}/rse_gene.Rdata"
  genes = "/users/cn/sjin/projects/proportionality/data/${params.id}/mygenes_enzyme_go"

  // propr permutation
  permutation = 50
  
  // tissue
  tis = false
  // tis = "blood"
  tissue = "${baseDir}/results/${params.id}/mygene_enzyme_go_p${params.permutation}/${params.tis}/tissue"

  // if nsample
  usensample = false
  nsamples = [20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,640,650,660,670,680,690,700,710,720,730,740,750,760,770,780,790,800,810,820,830,840,850,860,870,880,890,900,910,920,930,940,950,960,970,980,990,1000,1500,2000,2500,3000,3500,4000,4500,5000,5500,6000,6500,7000,7500,8000,8500,9000]
  // seeds = "${baseDir}/results/${params.id}/mygene_enzyme_go_p${params.permutation}/${params.tis}/seeds/nsamp_seeds*_singularity"
  seeds = "${baseDir}/results/${params.id}/mygene_enzyme_go_p${params.permutation}/all/seeds/nsamp_seeds*_singularity"

  // if compute for all samples
  allsample = true

  // output
  outdir = "${baseDir}/results/${params.id}/comparison_propr_pearson_p${params.permutation}/network/pearson_tmm"
  tracedir = "${outdir}/pipeline_info"

  metric = "cor"  // rho,phi,phs,cor,vlr
  ivar = "NA"    // clr,iqlr,NA,log2
  norm = "tmm"     // rpkm,tmm,NA

  // check if output exists
  check = true

  // config
  config_profile_name = 'CRG profile'
  config_profile_description = 'Configuration to run Proportionnality analysis on enzyme genes using CRG cluster'
  set_cpus = 1
  set_time = '48h'
  // set_mem = 64
}

process {
    executor = 'crg'
    maxRetries = 1

    queue = { 'long-sl7' }

    cpus = "${params.set_cpus}"
    time = { "${params.set_time}" }
}


// trace report
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}
tower {
  accessToken = '57cc4e09eb0909d18d9926731205dfff09a13cc4'
  enabled = true
}